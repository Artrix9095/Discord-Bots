import discord
from discord.ext import commands as cmd

from asyncio import sleep as repeat

import random as r
import sqlite3

from time import sleep as cd
import json as js

from math import floor
global movetype

class Raid(cmd.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.counter = 0
        self.msg = 0
        self.raidid = ''
        self.broadcast = None
        self.heh = 0
        self.numz = 0

        self.bot.loop.create_task(self.raid_check())
        self.bot.loop.create_task(self.generate())
        self.bot.loop.create_task(self.user_check())

        with open(r"F:\Artrix-botz\PhysixsFun\cugo\raid.artrix", 'r') as f:
            self.raid = js.load(f)

        with open(r"F:\Artrix-botz\PhysixsFun\cugo\users.artrix", 'r') as f:
            self.users = js.load(f)


    async def raid_check(self):
        await self.bot.wait_until_ready()
        while not self.bot.is_closed():
            with open(r"./users.artrix", 'w') as f:
                js.dump(self.users, f, indent=4)

            await repeat(10)


    async def user_check(self):
        await self.bot.wait_until_ready()
        while not self.bot.is_closed():
            with open(r"./raid.artrix", 'w') as f:
                js.dump(self.raid, f, indent=4)

            await repeat(4.5)

    async def generate(self):
        await self.bot.wait_until_ready()
        while not self.bot.is_closed():
            self.msg = r.randint(11, 13)
            await repeat(3600)


    def boss_death(self, monname):
        cur_hp = int(self.raid[self.raidid]['Boss']['Stats']['hp'])
        cur_lvl = int(self.raid[self.raidid]['Boss']['Stats']['lvl'])
        if cur_lvl/2 > 100:
            cur_lvl = 100
        if 0 >= cur_hp:
            number = 0
            for x in self.raid[self.raidid]['users']:
                number += 1
                id = self.raid[self.raidid]['users'][f'user{number}']['ID']
                db = sqlite3.connect('users.sqlite')
                c = db.cursor()
                z = db.cursor()
                c.execute(f"SELECT coins, redeems, total FROM usr WHERE user_id = '{str(id)}'")
                profile = c.fetchone()
                sql = ("UPDATE usr SET coins = ? redeems = ? total = ? WHERE user_id = ?")
                val = ((int(cur_lvl)*10)+int(profile[0]), int(profile[1])+1, int(profile[2])+1, str(id))
                c.execute(sql, val)
                db.commit()
                ivs = 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
                hpiv = r.choice(ivs)
                CCiv = r.choice(ivs)
                CCDEFiv = r.choice(ivs)
                FRiv = r.choice(ivs)
                FRDEFiv = r.choice(ivs)
                MGC = r.choice(ivs)
                SPD = r.choice(ivs)
                sql1 = ("INSERT INTO mons(user_id, form, Level, xp, Name, HPiv, CCiv, CCDEFiv, FRiv, FRDEFiv, MGC, SPD, num, item) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?)")
                val1 = (str(id), str(monname), int(cur_lvl), 0, str(monname), int(hpiv), int(CCiv), int(CCDEFiv), int(FRiv), int(FRDEFiv), int(MGC), int(SPD), int(profile[2]+1), None)
                z.execute(sql1, val1)
                db.commit()
            return True
        else:
            return False


    @cmd.Cog.listener()
    async def on_message(self, message):
        if message.author == self.bot.user:
            return
        self.counter += r.randint(1, 3)
        if self.counter >= self.msg:
            x = sqlite3.connect('servers.sqlite').cursor()
            x.execute(f"SELECT channel_id FROM channel WHERE server_id = '{str(message.guild.id)}'")
            server = x.fetchone()
            if server is None:
                channel = message.channel
            elif server is not None:
                channel = self.bot.get_channel(id=int(server[0]))
            await channel.send("A Boss has Appeared! Who Dares Challenge It!")
            pz = r.randint(0, 2)
            db = sqlite3.connect('mons.sqlite')
            cursor = db.cursor()
            cursor.execute(f'SELECT name, image, hp FROM forms')
            result = cursor.fetchall()
            image = result[pz][1]
            monname = result[pz][0]
            lvl = r.randint(80, 290)
            self.counter -= self.counter
            uwu = r.randint(10,120)
            _4rmd = r.randint(1,100)
            pwer = r.randint(3, 10)
            self.raidid = str(floor(round(((message.author.id*(uwu/20))/(pz+1*1000000)))) + _4rmd*_4rmd + _4rmd^pwer)
            culorz = [0x9750C7, 0x000066, 0xA200FF, 0x0008FF]
            embed = discord.Embed(color=r.choice(culorz), timestamp=message.created_at, title=f"It's a Level {lvl} {monname}!")

            embed.set_image(url=image)
            await channel.send(embed=embed)
            hpiv = r.randint(0, 31)
            bosshp = floor((round(int(result[pz][2]) * int(lvl)) + ((int(hpiv)*int(lvl))) / 350) * 1.75)
            self.raid[self.raidid] = {}
            self.raid[self.raidid]['guild'] = str(message.guild.id)
            self.raid[self.raidid]['Boss'] = {}
            self.raid[self.raidid]['Boss']['Stats'] = {}
            self.raid[self.raidid]['Boss']['Stats']['lvl'] = lvl
            self.raid[self.raidid]['Boss']['Stats']['name'] = monname
            self.raid[self.raidid]['Boss']['Stats']['hp'] = int(bosshp)
            self.raid[self.raidid]['users'] = {}
            print(self.raid[self.raidid]['users'])
            if self.numz >= 1:
                await channel.send("The Raid has Started!")
            else:
                timer = 0
                while timer < 20 and self.numz == 0:
                    timer += 1
                    cd(1)
                else:
                    await channel.send('The Raid Has Started!')
                if timer < 20:
                    await channel.send('The Boss Fled!')
                    del self.raid[self.raidid]

            while not self.boss_death(monname):
                choice_scarf = r.randint(10, 120)
                if self.broadcast == True:
                    dmg = 5*choice_scarf
                    self.raid[self.raidid]['Boss']['Stats']['hp'] -= dmg
                    bossdmg = 5*(choice_scarf*2)/10
                    self.raid[self.raidid]['users'][f'user{self.numz}']['Stats']['hp'] -= bossdmg
                    culorz = [0x9750C7, 0x000066, 0xA200FF, 0x0008FF]
                    embed = discord.Embed(color=r.choice(culorz), timestamp=message.created_at, title=f"It's a Level {lvl} {monname}!")
                    embed.add_field(name=monname, value=f"Has Dealt `{bossdmg}`")
                    await channel.send(embed=embed)
                    embed = discord.Embed(color=r.choice(culorz), timestamp=message.created_at, title=f"It's a Level {lvl} {monname}!")
                    embed.add_field(name=self.raid[self.raidid]['users'][f'user{self.numz}']['Stats']['name'], value=f"Has Dealt `{dmg}`")
                    await channel.send(embed=embed)
                    culorz = [0x9750C7, 0x000066, 0xA200FF, 0x0008FF]
                    embed = discord.Embed(color=r.choice(culorz), timestamp=message.created_at, title=monname)
                    embed.add_field(name="__**HP:**__", value=f"`{self.raid[self.raidid]['Boss']['Stats']['hp']}/{bosshp}`")

                    embed.set_image(url=image)
                    await channel.send(embed=embed)
                    self.broadcast = False
                    cd(3)


                if self.boss_death(monname):
                    culorz = [0x9750C7, 0x000066, 0xA200FF, 0x0008FF]
                    embed = discord.Embed(color=r.choice(culorz), timestamp=message.created_at, title=f"You Have Beaten a Level {lvl} {monname}!")
                    embed.add_field(name=f"Congrats to:", value=embed.Empty)
                    run = 0
                    for x in self.raid[self.raidid]['users']:
                        run += 1
                        embed.add_field(name=run, value=f"<@{self.raid[self.raidid]['users'][f'user{run}']['ID']}> \n")
                    embed.add_field(name="You Have all Been rewarded!", value="Check Your Profile!")
                    await channel.send(embed=embed)
                    del self.raid[self.raidid]
                    self.broadcast = None


    @cmd.command()
    async def attack(self, ctx, num: int, type: str):
        if self.broadcast == False:
            if not self.broadcast == None:
                if str(ctx.guild.id) == self.raid[self.raidid]['guild']:
                    self.numz = num
                    await ctx.message.delete()
    @cmd.command()
    async def cancel(self, ctx):
        if self.broadcast == False:
            if not self.broadcast == None:
                if str(ctx.guild.id) == self.raid[self.raidid]['guild']:
                    del self.raid[self.raidid]
                    await ctx.message.delete()
                    await ctx.send(f"<@{ctx.author.id}> Has Canceled the Boss Fight!")

    @cmd.command()
    async def join(self, ctx):
        self.heh += 1
        self.users[self.raidid] = {}
        self.users[self.raidid][f'user{self.heh}'] = str(ctx.author.id)
        author_id = self.users[self.raidid][f'user{self.heh}']
        c = sqlite3.connect('users.sqlite').cursor()
        c.execute(f"SELECT selected FROM usr WHERE user_id = {author_id}")
        usr = c.fetchone()
        if usr is None:
            await ctx.send(f"<@{author_id}>: **You Can't Join Because you Have to Start First!**")
            return

        x = sqlite3.connect('users.sqlite').cursor()
        z = sqlite3.connect('mons.sqlite').cursor()
        x.execute(f"SELECT Level, Name, HPiv, CCiv, CCDEFiv, FRiv, FRDEFiv, MGC, SPD, Total FROM mons WHERE user_id = '{author_id}' and num = '{usr[0]}'")
        mon = x.fetchone()
        z.execute(f"SELECT name, image, hp FROM mons WHERE name = '{mon[1]}'")
        info = z.fetchone()
        health = floor(round(int(info[2]) * int(mon[0])) + ((int(mon[2])*int(mon[0]))) / 350)
        self.raid[self.raidid]['users'][f'user{self.heh}'] = {}
        self.raid[self.raidid]['users'][f'user{self.heh}']['ID'] = author_id
        self.raid[self.raidid]['users'][f'user{self.heh}']['Stats'] = {}
        self.raid[self.raidid]['users'][f'user{self.heh}']['Stats']['lvl'] = int(mon[0])
        self.raid[self.raidid]['users'][f'user{self.heh}']['Stats']['name'] = mon[1]
        self.raid[self.raidid]['users'][f'user{self.heh}']['Stats']['hp'] = int(health)
        await ctx.send(f"<@{self.raid[self.raidid]['users'][f'user{self.heh}']['ID']}> You Number is: ||**__{self.heh}__**||! Use It When you Move!")
        self.broadcast = False
        await ctx.send(f"<@{ctx.author.id}> Has Joined the Raid!")


def setup(bot):
    bot.add_cog(Raid(bot))
